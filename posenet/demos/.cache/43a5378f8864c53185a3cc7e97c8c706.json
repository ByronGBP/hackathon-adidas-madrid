{"dependencies":[{"name":"/Users/elvingomez/3lv27/hackathons/Mad/posenet/demos/package.json","includedInParent":true,"mtime":1525707475000},{"name":"/Users/elvingomez/3lv27/hackathons/Mad/posenet/demos/.babelrc","includedInParent":true,"mtime":1525707475000},{"name":"/Users/elvingomez/3lv27/hackathons/Mad/posenet/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":1524539866000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n","map":{"mappings":[{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/@tensorflow/tfjs-core/dist/ops/reduce_util.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PARALLELIZE_THRESHOLD = 30;\nfunction computeOptimalWindowSize(inSize) {\n    if (inSize <= exports.PARALLELIZE_THRESHOLD) {\n        return inSize;\n    }\n    return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\nexports.computeOptimalWindowSize = computeOptimalWindowSize;\nfunction nearestDivisor(size, start) {\n    for (var i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\n"},"lineCount":19}},"hash":"4c2ca4432756ce7366bfc782d1aea780","cacheData":{"env":{}}}